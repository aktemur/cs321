{
 (* File Fun/Funlex.fsl 
    Lexer for a simple functional language (micro-ML) 
    sestoft@itu.dk * 2010-01-02
  *)

module Lexer

open Microsoft.FSharp.Text.Lexing
open Parser;

let lexemeAsString lexbuf = 
    LexBuffer<char>.LexemeString lexbuf

(* Start of outermost comment currently being scanned *)
let commentStart = ref Position.Empty;  
 
let commentDepth = ref 0;  (* Current comment nesting *)

}

rule Token = parse
  | [' ' '\t' '\r'] { Token lexbuf }
  | '\n'            { lexbuf.EndPos <- lexbuf.EndPos.NextLine; Token lexbuf }
  | ['0'-'9']+      { CSTINT (System.Int32.Parse (lexemeAsString lexbuf)) }
  | "let"           { LET }
  | "in"            { IN }
  | "end"            { END }
  | "min"           { MIN }
  | "if"            { IF }
  | "then"          { THEN }
  | "else"          { ELSE }
  | "true"          { TRUE }
  | "false"         { FALSE }
  | "int"           { INT }
  | "bool"          { BOOL }
  | ['a'-'z''A'-'Z']['a'-'z''A'-'Z''0'-'9']*
                    { NAME (lexemeAsString lexbuf) }
  | "(*"            { commentStart := lexbuf.StartPos;
                      commentDepth := 1; 
                      SkipComment lexbuf; Token lexbuf }
  | "->"            { ARROW }
  | '+'             { PLUS }                     
  | '-'             { MINUS }                     
  | '*'             { TIMES }                     
  | '/'             { DIV }                     
  | '('             { LPAR }
  | ')'             { RPAR }
  | '='             { EQ }
  | ','             { COMMA }
  | '<'             { LESS }
  | "&&"            { ANDAND }
  | "||"            { OROR }
  | ':'             { COLON }
  | eof             { EOF }
  | _               { failwith "Lexer error: illegal symbol" }

and SkipComment = parse
    "*)"            { commentDepth := !commentDepth - 1;  
                      if !commentDepth = 0 then ()
                      else SkipComment lexbuf 
                    } 
   | "(*"           { commentDepth := !commentDepth + 1; 
                      SkipComment lexbuf }
   | eof            { failwith "Lexer error: unterminated comment" }
   | _              { SkipComment lexbuf }

